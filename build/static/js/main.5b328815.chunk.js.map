{"version":3,"sources":["components/TitleComponent.js","App.js","index.js"],"names":["TitleComponent","h2","css","textGradient","textAlign","size","as","display","letterSpacing","App","messageRef","React","useRef","privateKeyRef","messageLogRef","useState","transmitterBusy","setTransmitterBusy","receiver","setReceiver","payloadBuffer","ArrayBuffer","timer","fn","t","timerObj","setTimeout","this","stop","clearTimeout","start","reset","decryptedPayload","ab2str","current","value","bf","Blowfish","trimZeros","decrypt","base64Decode","Date","toLocaleDateString","hour","minute","second","y","Container","gap","xs","lg","flexDirection","style","flexWrap","label","helperText","ref","clearable","rows","width","auto","color","onPress","marginTop","marginLeft","disabled","payload","length","console","log","encryptedPayload","base64Encode","encrypt","quiet","transmitter","profile","onFinish","transmit","str2ab","transmitMessage","marginRight","destroy","rx","onReceive","mergeab","onReceiveFail","noOfFailedFrames","timeNow","toggleReceiver","alignContent","title","divider","minRows","maxRows","readOnly","rootElement","document","getElementById","theme","createTheme","type","colors","primaryLight","primaryLightHover","primaryLightActive","primaryLightContrast","primaryBorder","primaryBorderHover","primarySolidHover","primarySolidContrast","primaryShadow","gradient","link","createRoot","render"],"mappings":"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","file":"static/js/main.5b328815.chunk.js","sourcesContent":["import { Text } from \"@nextui-org/react\";\n\nfunction TitleComponent() {\n  return (\n    <Text\n      h2\n      css={{\n        textGradient: \"45deg, rgba(146,34,195,1) 0%, rgba(162,38,35,1) 100%\",\n        textAlign: \"center\",\n      }}\n    >\n      Tesseract\n      <Text\n        size={16}\n        as=\"span\"\n        css={{\n          display: \"block\",\n          letterSpacing: \"$normal\",\n        }}\n      >\n        Data over audio\n      </Text>\n    </Text>\n  );\n}\n\nexport default TitleComponent;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Grid,\n  Spacer,\n  Textarea,\n  Button,\n  Input,\n  Collapse,\n} from \"@nextui-org/react\";\nimport quiet, { ab2str, str2ab, mergeab } from \"quietjs-bundle\";\nimport TitleComponent from \"./components/TitleComponent\";\nimport Blowfish from \"javascript-blowfish\";\n\nfunction App() {\n  const messageRef = React.useRef(null);\n  const privateKeyRef = React.useRef(null);\n  const messageLogRef = React.useRef(null);\n  const [transmitterBusy, setTransmitterBusy] = useState(false);\n  const [receiver, setReceiver] = useState(null);\n  let payloadBuffer = new ArrayBuffer(0);\n\n  function Timer(fn, t) {\n    var timerObj = setTimeout(fn, t);\n\n    this.stop = function () {\n      if (timerObj) {\n        clearTimeout(timerObj);\n        timerObj = null;\n      }\n      return this;\n    };\n\n    // start timer using current settings (if it's not already running)\n    this.start = function () {\n      if (!timerObj) {\n        this.stop();\n        timerObj = setTimeout(fn, t);\n      }\n      return this;\n    };\n\n    // start with new or original interval, stop current interval\n    this.reset = function (newT = t) {\n      t = newT;\n      return this.stop().start();\n    };\n  }\n\n  const decryptPayload = () => {\n    let decryptedPayload = ab2str(payloadBuffer);\n    if (privateKeyRef.current.value) {\n      const bf = new Blowfish(privateKeyRef.current.value);\n      decryptedPayload = bf.trimZeros(bf.decrypt(bf.base64Decode(decryptedPayload)));\n    }\n    // Reset payloadBuffer\n    payloadBuffer = new ArrayBuffer(0);\n\n    messageRef.current.value = decryptedPayload;\n    messageLogRef.current.value +=\n      \"\\n--> [\" +\n      new Date().toLocaleDateString(\"et-EE\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\",\n      }) +\n      \"]: \" +\n      decryptedPayload;\n  };\n  const timer = new Timer(decryptPayload, 1000);\n  timer.stop();\n\n  const toggleReceiver = () => {\n    if (receiver) {\n      receiver.destroy();\n      setReceiver(null);\n      return;\n    }\n    if (transmitterBusy) {\n      return;\n    }\n    const rx = quiet.receiver({\n      profile: \"audible\",\n      onReceive: (payload) => {\n        payloadBuffer = mergeab(payloadBuffer, payload);\n        timer.reset();\n      },\n      onReceiveFail: (noOfFailedFrames) => {\n        const timeNow = new Date();\n        messageLogRef.current.value +=\n          \"\\n--> [\" +\n          timeNow.toLocaleDateString(\"et-EE\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: \"numeric\",\n          }) +\n          \"]: \" +\n          \"Received frame checksum failed.\";\n      },\n    });\n    setReceiver(rx);\n  };\n\n  const transmitMessage = (payload) => {\n    if (transmitterBusy || receiver || payload.length === 0) {\n      return;\n    }\n    console.log(payload);\n    let encryptedPayload = payload;\n    if (privateKeyRef.current.value) {\n      const bf = new Blowfish(privateKeyRef.current.value);\n      encryptedPayload = bf.base64Encode(bf.encrypt(payload));\n    }\n\n    console.log(encryptedPayload);\n\n    setTransmitterBusy(true);\n    const tx = quiet.transmitter({\n      profile: \"audible\",\n      onFinish: () => {\n        messageLogRef.current.value +=\n          \"\\n<-- [\" +\n          new Date().toLocaleDateString(\"et-EE\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: \"numeric\",\n          }) +\n          \"]: \" +\n          payload;\n        setTransmitterBusy(false);\n      },\n    });\n    tx.transmit(str2ab(encryptedPayload));\n  };\n\n  return (\n    <>\n      <Container>\n        <Spacer y={1} />\n        <TitleComponent />\n        <Grid.Container gap={2}>\n          <Grid\n            xs={12}\n            lg={6}\n            css={{\n              flexDirection: \"column\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <Input\n                label=\"Secret passphrase\"\n                helperText=\"Enter your secret passphrase used for encryption\"\n                ref={privateKeyRef}\n                clearable\n                rows={7}\n                css={{\n                  width: \"100%\",\n                }}\n              />\n              <Button\n                auto\n                color=\"secondary\"\n                onPress={() => (privateKeyRef.current.value = null)}\n                css={{\n                  marginTop: \"$10\",\n                  marginLeft: \"auto\",\n                }}\n              >\n                Clear\n              </Button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <Textarea\n                disabled={transmitterBusy}\n                label=\"Message transmission\"\n                helperText=\"Enter or receive message\"\n                ref={messageRef}\n                clearable\n                rows={7}\n                css={{\n                  width: \"100%\",\n                }}\n              />\n              <Button\n                auto\n                color=\"primary\"\n                disabled={transmitterBusy || receiver}\n                onPress={() => {\n                  transmitMessage(messageRef.current.value);\n                }}\n                css={{\n                  marginTop: \"$10\",\n                  marginRight: \"$8\",\n                }}\n              >\n                {transmitterBusy ? \"Sending...\" : \"Send\"}\n              </Button>\n              <Button\n                auto\n                color={receiver ? \"warning\" : \"success\"}\n                onPress={() => {\n                  toggleReceiver();\n                }}\n                css={{\n                  marginTop: \"$10\",\n                  marginRight: \"$8\",\n                }}\n              >\n                {receiver ? \"Stop listening\" : \"Listen\"}\n              </Button>\n              <Button\n                auto\n                color=\"secondary\"\n                onPress={() => (messageRef.current.value = null)}\n                css={{\n                  marginTop: \"$10\",\n                  marginLeft: \"auto\",\n                }}\n              >\n                Clear\n              </Button>\n            </div>\n          </Grid>\n          <Grid\n            xs={12}\n            lg={6}\n            css={{\n              flexWrap: \"wrap\",\n              alignContent: \"start\",\n            }}\n          >\n            <Collapse\n              title=\"Message log\"\n              divider={false}\n              css={{\n                width: \"100%\",\n              }}\n            >\n              <div>\n                <Textarea\n                  ref={messageLogRef}\n                  minRows={7}\n                  maxRows={20}\n                  readOnly\n                  css={{\n                    width: \"100%\",\n                  }}\n                />\n                <Spacer y={1} />\n                <div\n                  style={{\n                    display: \"flex\",\n                  }}\n                >\n                  <Button\n                    auto\n                    color=\"secondary\"\n                    onPress={() => (messageLogRef.current.value = null)}\n                    css={{\n                      marginLeft: \"auto\",\n                    }}\n                  >\n                    Clear\n                  </Button>\n                </div>\n              </div>\n            </Collapse>\n          </Grid>\n        </Grid.Container>\n        <Spacer y={2} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport './scss/style.scss';\nimport { createTheme, NextUIProvider } from '@nextui-org/react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nconst theme = createTheme({\n  type: \"dark\",\n  theme: {\n    colors: {\n      // brand colors\n      primaryLight: '$green200',\n      primaryLightHover: '$green300',\n      primaryLightActive: '$green400',\n      primaryLightContrast: '$green600',\n      primaryBorder: '$green500',\n      primaryBorderHover: '$green600',\n      primarySolidHover: '$green700',\n      primarySolidContrast: '$white',\n      primaryShadow: '$green500',\n\n      gradient: 'linear-gradient(112deg, $blue100 -25%, $pink500 -10%, $purple500 80%)',\n      link: '#5E1DAD',\n    },\n  }\n})\n\ncreateRoot(rootElement).render(\n  <NextUIProvider theme={theme}>\n    <App />\n  </NextUIProvider>\n);"],"sourceRoot":""}